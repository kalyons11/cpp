#!/bin/bash

# Add header guards to all .hpp files
./scripts/add_header_guards.sh

# Get the list of staged .cpp and .h files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E "\.(cpp|hpp)$")

# Function to run clang-tidy and clang-format
process_file() {
    FILE=$1
    echo "Processing $FILE"
    /usr/local/opt/llvm/bin/clang-tidy "$FILE" --warnings-as-errors=* -fix -fix-errors -- -std=c++20
    TIDY_STATUS=$?
    clang-format -i "$FILE"
    FORMAT_STATUS=$?

    # Exit if either clang-tidy or clang-format fails
    if [ $TIDY_STATUS -ne 0 ] || [ $FORMAT_STATUS -ne 0 ]; then
        echo "Exiting process_file due to clang-tidy or clang-format failure."
        exit 255
    fi
    echo "Both clang-tidy and clang-format passed for $FILE"
}

# Export the function to be used by xargs
export -f process_file

# Run clang-tidy and clang-format on each staged file in parallel
if [ -n "$STAGED_FILES" ]; then
    echo "Running clang-tidy and clang-format on staged files..."
    for FILE in $STAGED_FILES; do
        process_file "$FILE"
        if [ $? -ne 0 ]; then
            echo "clang-tidy or clang-format failed for $FILE. Aborting commit."
            exit 1
        fi
    done

    # Add formatted files back to the staging area if not empty
    if [ -n "$STAGED_FILES" ]; then
        git add $STAGED_FILES
    fi

    # Check if there are any changes to commit
    if git diff --cached --quiet; then
        echo "No changes to commit. Aborting."
        exit 1
    fi
else
    echo "No staged .cpp or .h files to check or format."
fi
